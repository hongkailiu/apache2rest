input {
    file {
        path => "/home/ehongka/git-repo/gerrit/2.12.gerrit_testsite/logs/httpd_log"
        start_position => beginning 
        ignore_older => 0 
    }
}

filter {
 
    grok {
        patterns_dir => ["/home/ehongka/git-repo/test/apache2rest/patterns"]
        match => { "message" => "%{MYIP:client}%{SPACE}(%{USER:identd})%{SPACE}%{MYUSERNAME:user}%{SPACE}\[%{MYTIMESTAMP:mytimestamp}\]%{SPACE}\"%{WORD:method}%{SPACE}%{MYURIPARAM:uri}%{SPACE}%{URIPROTO}/%{NUMBER:version}\"%{SPACE}%{INT:status_code}%{SPACE}(%{CONTENT_LENGTH:content_length})%{SPACE}%{REFERER:referer}%{SPACE}%{REFERER:agent}"}
    }

 ruby {
    # Cancel 90% of events
    code => "require 'date';
             event['datestring'] = DateTime.strptime(event['mytimestamp'], '%d/%b/%Y:%H:%M:%S %z').strftime('%Y-%m-%dT%H:%M:%S.%L%z')"
  }

}

output {

http {
    http_method => "post"
    #url => "http://localhost:8092/log"
    url => "https://camo.insight.rnd.ericsson.se/dispatcher/doc/create"
    content_type => "application/json"
    format => "message"
    message => '{"documents" : [{"timestamp":"%{datestring}", "host":"%{host}", "user":"%{user}", "agent": %{agent}, "status_code": %{status_code}, "content_length": %{content_length}, "uri":"%{uri}", "store":"test-gerrit1"}]}'
}
}
